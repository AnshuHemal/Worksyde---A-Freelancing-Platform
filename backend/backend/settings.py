"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from mongoengine import connect
import os

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = "django-insecure-(=%p@sx^e$8%b$_-f@!cer10-!%x%(4n)x=+0-re@5)i#&*r*%"

DEBUG = os.environ.get('DEBUG', 'False') == 'True'

ALLOWED_HOSTS = [
    "localhost",
    "127.0.0.1",
    ".vercel.app",
    ".now.sh",
    ".onrender.com",
    ".herokuapp.com",
]

# Channel Layers Configuration
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer",
    },
}


# Application definition

INSTALLED_APPS = [
    "corsheaders",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "Admin",
    "Auth",
    "daphne",
    "channels",
    "chats",
    "Resume",
    "tarz_chatbot",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "backend.urls"

CORS_ALLOW_CREDENTIALS = True
CSRF_COOKIE_SECURE = False
SESSION_COOKIE_SECURE = False

# Optional: allow frontend if needed
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "https://localhost:5173",
    "https://your-frontend-domain.vercel.app",
    "https://your-frontend-domain.netlify.app",
]

SECRET_KEY = "whiteturtlesworkspace"

EMAIL_BACKEND = "backend.custom_email_backend.CustomEmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587 
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = "worksyde.in@gmail.com"
EMAIL_HOST_PASSWORD = "szxsyiruaxakfdho"
DEFAULT_FROM_EMAIL = f"Worksyde <{EMAIL_HOST_USER}>"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Default SQLite database for Django's built-in apps
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# MongoDB connection for mongoengine
connect(
    db="worksyde",
    host="mongodb+srv://whiteturtle1:dvIw4evFuDVOzea3@cluster0.1e4vx.mongodb.net/worksyde?retryWrites=true&w=majority&appName=Cluster0",
    username="whiteturtle1",
    password="dvIw4evFuDVOzea3",
    authentication_source="admin",
    alias="default",
)

ASGI_APPLICATION = "backend.asgi.application"

# Channel Layers already configured above


# AUTH_PASSWORD_VALIDATORS = [
#     {
#         "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
#     },
#     {
#         "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
#     },
#     {
#         "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
#     },
#     {
#         "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
#     },
# ]

AUTH_PASSWORD_VALIDATORS = []

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Django 3.2 compatibility
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Twilio SMS Configuration
TWILIO_ACCOUNT_SID = "ACafec1fba446ceb9e4e50e2620c49313b"
TWILIO_AUTH_TOKEN = "d9e0e21d4aef53c2d9c18d3d296d60c1"
TWILIO_PHONE_NUMBER = "+12342629032"

# PayPal Configuration - Using working sandbox credentials
PAYPAL_CLIENT_ID = os.environ.get('PAYPAL_CLIENT_ID', 'Afups2A6AknaMzjVclJQDgcwt16OMXewOpQ71Jwswp54zNi2vpe8-84jGj2at_WmMnn_knmzR4SHwl4Y')
PAYPAL_CLIENT_SECRET = os.environ.get('PAYPAL_CLIENT_SECRET', 'EMoubdh7J-MX2s5xOgMFpLieWtA3XRdJ5bef5_6YeuriFN9HD8rUSeQfolzSsq-zZui29IY8rkFs-hjy')
PAYPAL_MODE = os.environ.get('PAYPAL_MODE', 'sandbox')  # 'sandbox' for testing, 'live' for production

# Currency Exchange API Configuration (optional)
EXCHANGE_RATE_API_KEY = os.environ.get('EXCHANGE_RATE_API_KEY', 'f83ae214f566ebc767b97868')  # Get free key from exchangerate-api.com 
